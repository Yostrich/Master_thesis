Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cores: 1 (use --cores to define parallelism)
Rules claiming more threads will be scaled down.
Conda environments: ignored
Job stats:
job             count    min threads    max threads
------------  -------  -------------  -------------
PosEffRatios        1              1              1
total               1              1              1

Select jobs to execute...

[Fri Oct 14 13:16:02 2022]
rule PosEffRatios:
    input: LUZ7_peak_calling/LUZ7_enriched_t5.3end.plus.peaks.oracle.narrowPeak.counts.clustered.csv, LUZ7_genome.txt, BAM_files_LUZ7/LUZ7_enriched_t5.sorted.bam
    output: LUZ7_t5_test.txt
    jobid: 0
    reason: Missing output files: LUZ7_t5_test.txt
    wildcards: phage=LUZ7, ident=t5
    resources: tmpdir=/tmp

RuleException in rule PosEffRatios in line 8 of /mnt/c/Users/danis/Desktop/Thesis/pipeline_snakemake/workflow/rules/annotateTTS.smk:
ValueError: Single '}' encountered in format string, when formatting the following:

        bedFile=$(bedtools bamtobed -i {input[2]} | sort -k1,1 -k2,2n)
        posBedFile=$(grep -w "+" <(echo "$bedFile"))
        > {output}

        sort -t ',' -k15 -n -u {input[0]} | awk -F ',' 'NR>1 {{print $2, $15}}' | while read -r chr peak;
        do
            genomeCovFile=$(bedtools genomecov -g {input[1]} -i <(echo "$posBedFile") -d)

            upstreamTTSaverageCoverage=$(awk -v TTS="$peak" '$2 < TTS && $2 >= TTS-20' <(echo "$genomeCovFile") |             awk -v TTS="$peak" '{{total += $3}} END {{print TTS, TTS-20, total/NR}}')
            downstreamTTSaverageCoverage=$(awk -v TTS="$peak" '$2 > TTS && $2 <= TTS+20' <(echo "$genomeCovFile") |            awk -v TTS="$peak" '{{total += $3}} END {{print TTS, TTS+20, total/NR}}')
            upstreamValue=$(awk '{{ print $3 }}' <(echo "$upstreamTTSaverageCoverage"))

            if (( $(echo $upstreamValue'>'0 | bc -l) ));
            then
                paste -d " " <(echo "$upstreamTTSaverageCoverage") <(echo "$downstreamTTSaverageCoverage") |                awk -v chr=$chr '{{print chr, $1, $2, $3, $4, $5, $6, $6/$3, 1-$6/$3}}')
                awk '{{} if(($4 > 30) && ($9 >= 0.02)) {{ print }} }}' >> {output}
            fi
        done
        
