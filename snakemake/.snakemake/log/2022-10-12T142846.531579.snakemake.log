Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cores: 1 (use --cores to define parallelism)
Rules claiming more threads will be scaled down.
Conda environments: ignored
Job stats:
job                                   count    min threads    max threads
----------------------------------  -------  -------------  -------------
all                                       1              1              1
getInformationFromOverlappingPeaks        1              1              1
total                                     2              1              1

Select jobs to execute...

[Wed Oct 12 14:28:46 2022]
rule getInformationFromOverlappingPeaks:
    input: LUZ7_peak_calling/LUZ7_enriched_t5.5end.plus.peaks.oracle.narrowPeak.counts.clustered.csv, LUZ7_peak_calling/LUZ7_control_t5.5end.plus.peaks.oracle.narrowPeak.counts.clustered.csv, LUZ7_t5_all_overlapping_peaks.plus.csv
    output: TSS_LUZ7_t5/enrRatios_LUZ7_t5.plus.csv
    jobid: 1
    reason: Missing output files: TSS_LUZ7_t5/enrRatios_LUZ7_t5.plus.csv
    wildcards: phage=LUZ7, ident=t5, sign=plus
    resources: tmpdir=/tmp

RuleException in rule getInformationFromOverlappingPeaks in line 44 of /mnt/c/Users/danis/Desktop/Thesis/pipeline_snakemake/workflow/rules/annotateTSS.smk:
NameError: The name 'print $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $7/$14' is unknown in this context. Please make sure that you defined that variable. Also note that braces not used for variable access have to be escaped by repeating them, i.e. {{print $1}}, when formatting the following:


        commonEnriched=$(join -1 2 -2 15 <(sort {input[2]} -k2b,2) <(sort {input[0]}))
        commonControl=$(join -1 2 -2 15 <(sort {input[2]} -k2b,2) <(sort {input[0]}))
        # paste -d ' ' <(echo "$commonEnriched") <(echo "$commonControl") |        # awk '{print $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $7/$14}' |        # sort -g -k 2,2 | awk -v t=$Threshold -F " " '$15 > t {print }' > {output}
        
