{"version": null, "code": "gASV/QUAAAAAAAAoQxJ0AGQBfA58EWQCjQMBAGQAUwCUKIwFaW5wdXSUjAZvdXRwdXSUjAZwYXJhbXOUjAl3aWxkY2FyZHOUjAd0aHJlYWRzlIwJcmVzb3VyY2VzlIwDbG9nlIwHdmVyc2lvbpSMBHJ1bGWUjAljb25kYV9lbnaUjA1jb250YWluZXJfaW1nlIwQc2luZ3VsYXJpdHlfYXJnc5SMD3VzZV9zaW5ndWxhcml0eZSMC2Vudl9tb2R1bGVzlIwMYmVuY2hfcmVjb3JklIwFam9iaWSUjAhpc19zaGVsbJSMD2JlbmNoX2l0ZXJhdGlvbpSMD2NsZWFudXBfc2NyaXB0c5SMCnNoYWRvd19kaXKUjA1lZGl0X25vdGVib29rlIwPY29uZGFfYmFzZV9wYXRolIwHYmFzZWRpcpSMGHJ1bnRpbWVfc291cmNlY2FjaGVfcGF0aJSMGF9faXNfc25ha2VtYWtlX3J1bGVfZnVuY5R0lF2UKE5YbwQAAAogICAgICAgIE5zZXE9MjAxCiAgICAgICAgc2FtdG9vbHMgZmFpZHgge3BhcmFtcy5mYXN0YX0KICAgICAgICBnZW5vbWVOYW1lPSQoY3V0IC1mMSB7cGFyYW1zLmZhc3RhfS5mYWkpCiAgICAgICAgTmJwPSQoY3V0IC1mMiB7cGFyYW1zLmZhc3RhfS5mYWkpCiAgICAgICAgZWNobyAiJGdlbm9tZU5hbWUiCiAgICAgICAgdXBwZXJCb3VuZD0kKChOYnAgLSB7cGFyYW1zLmxvd2VyQm91bmR9KSkKICAgICAgICByYW5kb21OdW1iZXJzPSQoc2h1ZiAtaSB7cGFyYW1zLmxvd2VyQm91bmR9LSR1cHBlckJvdW5kIC1uICROc2VxKQoKICAgICAgICBOc2VxSGFsZlBvcz0kKChOc2VxLzIpKQogICAgICAgIE5zZXFIYWxmUG9zPSQoZWNobyAkTnNlcUhhbGZQb3MgfCBiYykKICAgICAgICBOc2VxSGFsZk5lZz0kKChOc2VxIC0gTnNlcUhhbGZQb3MpKQoKICAgICAgICByYW5kb21OdW1iZXJzUG9zPSQoaGVhZCAtbiAkTnNlcUhhbGZQb3MgPChlY2hvICIkcmFuZG9tTnVtYmVycyIpIHwgc29ydCAtbikKICAgICAgICByYW5kb21OdW1iZXJzTmVnPSQodGFpbCAtbiAkTnNlcUhhbGZOZWcgPChlY2hvICIkcmFuZG9tTnVtYmVycyIpIHwgc29ydCAtbikKCiAgICAgICAgYmVkUG9zPSQoYXdrIC1GJwknIC12IE9GUz0nCScgLXYgbmFtZT0kZ2Vub21lTmFtZSAne3twcmludCBuYW1lLCAkMSAtIHtwYXJhbXMubG93ZXJCb3VuZH0sICQxICsge3BhcmFtcy51cHBlckJvdW5kfSwgInt3aWxkY2FyZHMuVHhTfV8iIE5SICJfcG9zIiwgIisifX0nIDw8PCRyYW5kb21OdW1iZXJzUG9zKQogICAgICAgIGJlZE5lZz0kKGF3ayAtRicJJyAtdiBPRlM9JwknIC12IG5hbWU9JGdlbm9tZU5hbWUgJ3t7cHJpbnQgbmFtZSwgJDEgLSB7cGFyYW1zLmxvd2VyQm91bmR9LCAkMSArIHtwYXJhbXMudXBwZXJCb3VuZH0sICJ7d2lsZGNhcmRzLlR4U31fIiBOUiAiX25lZyIsICItIn19JyA8PDwkcmFuZG9tTnVtYmVyc05lZykKCiAgICAgICAgY29tYmluZWRCZWRGaWxlPSQoY2F0IDwoZWNobyAiJGJlZFBvcyIpIDwoZWNobyAiJGJlZE5lZyIpKQogICAgICAgIGJlZHRvb2xzIGdldGZhc3RhIC1maSB7cGFyYW1zLmZhc3RhfSAtYmVkIDwoZWNobyAiJGNvbWJpbmVkQmVkRmlsZSIpIC1mbyB7b3V0cHV0fSAtcyAtbmFtZSAKICAgICAgICCUaA9oEoaUZYwFc2hlbGyUhZR0lC4=", "rule": "getRandomSequencesFromFasta", "input": [], "log": [], "params": ["'LUZ7.fasta'", "100", "20"], "shellcmd": "\n        Nseq=201\n        samtools faidx LUZ7.fasta\n        genomeName=$(cut -f1 LUZ7.fasta.fai)\n        Nbp=$(cut -f2 LUZ7.fasta.fai)\n        echo \"$genomeName\"\n        upperBound=$((Nbp - 100))\n        randomNumbers=$(shuf -i 100-$upperBound -n $Nseq)\n\n        NseqHalfPos=$((Nseq/2))\n        NseqHalfPos=$(echo $NseqHalfPos | bc)\n        NseqHalfNeg=$((Nseq - NseqHalfPos))\n\n        randomNumbersPos=$(head -n $NseqHalfPos <(echo \"$randomNumbers\") | sort -n)\n        randomNumbersNeg=$(tail -n $NseqHalfNeg <(echo \"$randomNumbers\") | sort -n)\n\n        bedPos=$(awk -F'\t' -v OFS='\t' -v name=$genomeName '{print name, $1 - 100, $1 + 20, \"TTS_\" NR \"_pos\", \"+\"}' <<<$randomNumbersPos)\n        bedNeg=$(awk -F'\t' -v OFS='\t' -v name=$genomeName '{print name, $1 - 100, $1 + 20, \"TTS_\" NR \"_neg\", \"-\"}' <<<$randomNumbersNeg)\n\n        combinedBedFile=$(cat <(echo \"$bedPos\") <(echo \"$bedNeg\"))\n        bedtools getfasta -fi LUZ7.fasta -bed <(echo \"$combinedBedFile\") -fo TTS_LUZ7_t5/random_seq_LUZ7_t5.fa.out -s -name \n        ", "incomplete": false, "starttime": 1668593373.5261817, "endtime": 1668593373.741404, "job_hash": 8788175119874, "conda_env": null, "container_img_url": null, "input_checksums": {}}